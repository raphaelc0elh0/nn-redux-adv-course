{"version":3,"sources":["components/layout/SignedInLinks.jsx","store/actions/authActions.js","components/layout/SignedOutLinks.jsx","components/layout/Navbar.jsx","components/dashboard/Notifications.jsx","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","components/dashboard/Dashboard.jsx","components/projects/ProjectDetails.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/projects/CreateProject.jsx","store/actions/projectActions.js","App.jsx","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/configObject.js","config/fbConfig.js","index.js"],"names":["connect","state","dispatch","signOut","getState","getFirebase","auth","then","type","props","profile","className","to","onClick","initials","SignedOutLinks","firebase","links","uid","Notifications","notifications","notificationsList","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projectList","length","Dashboard","this","Component","compose","firestoreConnect","collection","orderBy","limit","firestore","ordered","ownProps","match","params","data","SignIn","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","email","password","authError","authErrorMessage","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","error","SignUp","signUp","firstName","lastName","newUser","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","console","log","rootReducer","combineReducers","firestoreReducer","firebaseReducer","configObject","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","store","createStore","applyMiddleware","thunk","withExtraArgument","AuthIsLoaded","children","useSelector","isLoaded","app","StrictMode","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.946cd0d3.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  const { profile } = props\n  return (\n    <ul className=\"right\">\n      <li><NavLink to=\"/create\">New Project</NavLink></li>\n      <li><a onClick={props.signOut}>Log Out</a></li>\n      <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink></li>\n    </ul>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks)\n","export const signIn = (credentials) => {\n  return (dispatch, getState, getFirebase) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' })\n    }).catch((error) => {\n      dispatch({ type: 'LOGIN_ERROR', error: error })\n    })\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, getFirebase) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    })\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, getFirebase) => {\n    const firebase = getFirebase();\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((response) => {\n      return firebase.firestore().collection('users').doc(response.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      })\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' })\n    }).catch((error) => {\n      dispatch({ type: 'SIGNUP_ERROR', error: error })\n    })\n  }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n      <li><NavLink to=\"/signin\">Login</NavLink></li>\n    </ul>\n  )\n}\n\nexport default SignedOutLinks\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props\n  const links = auth.uid\n    ? <SignedInLinks profile={profile} />\n    : <SignedOutLinks />\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return { auth: state.firebase.auth, profile: state.firebase.profile }\n}\n\nexport default connect(mapStateToProps)(Navbar)\n","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  const notificationsList = notifications\n    ? notifications.map(notification =>\n      <li key={notification.id}>\n        <span className=\"pink-text\">{notification.user}</span>\n        <span> {notification.content}</span>\n        <div className=\"grey-text note-date\">\n          {moment(notification.time.toDate()).fromNow()}\n        </div>\n      </li>\n    )\n    : <li>No notifications</li>\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notificationsList}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications\n","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects }) => {\n  const projectList = projects.length\n    ? projects.map(project =>\n      <Link key={project.id} to={`/project/${project.id}`}>\n        <ProjectSummary project={project} />\n      </Link>\n    )\n    : <p>NO projects found!</p>\n\n  return (\n    <div className=\"project-list section\">\n      {projectList}\n    </div>\n  )\n}\n\nexport default ProjectList\n","import React, { Component } from 'react'\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, notifications, auth } = this.props\n    if (!auth.uid) return <Redirect to=\"/signin\" />\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.firestore.ordered.projects || [],\n    notifications: state.firestore.ordered.notifications || [],\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n  ]),\n  connect((mapStateToProps)\n  ))(Dashboard)","import React from 'react'\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props\n  if (!auth.uid) return <Redirect to=\"/signin\" />\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>{project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id\n  const projects = state.firestore.data.projects\n  const project = projects\n    ? projects[id]\n    : null\n  return { project: project, auth: state.firebase.auth }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: 'projects' }])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value })\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n\n  render() {\n    const { authError, auth } = this.props\n    if (auth.uid) return <Redirect to=\"/\" />\n    const authErrorMessage = authError\n      ?\n      <div className=\"red-text center\">\n        <p>{authError}</p>\n      </div>\n      : null\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink ligthen-1 z-depth-0\">\n              Login\n            </button>\n            {authErrorMessage}\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (credentials) => dispatch(signIn(credentials))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value })\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n\n  render() {\n    const { auth, authError } = this.props\n    if (auth.uid) return <Redirect to=\"/\" />\n    const authErrorMessage = authError\n      ?\n      <div className=\"red-text center\">\n        <p>{authError}</p>\n      </div>\n      : null\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink ligthen-1 z-depth-0\">\n              Sign Up\n            </button>\n            {authErrorMessage}\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      title: '',\n      content: ''\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\")\n  }\n\n  render() {\n    const { auth } = this.props\n    if (!auth.uid) return <Redirect to=\"/signin\" />\n\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}>\n            </textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink ligthen-1 z-depth-0\">\n              Create\n            </button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { auth: state.firebase.auth }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n  return (dispatch, getState, getFirebase) => {\n    const firestore = getFirebase().firestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT', project: project })\n    }).catch((error) => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR', error: error })\n    })\n  }\n};","import React, { Component } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nexport class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"app\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      return { ...state, authError: action.error.message }\n    case 'LOGIN_SUCCESS':\n      return { ...state, authError: null }\n    case 'SIGNOUT SUCCESS':\n      return state;\n    case 'SIGNUP_SUCCESS':\n      return { ...state, authError: null }\n    case 'SIGNUP_ERROR':\n      return { ...state, authError: action.error.message }\n    default:\n      return state;\n  }\n}\n\nexport default authReducer","const initState = {\n  projects: [\n    { id: '1', title: 'help me find peach', content: 'blah blah blah' },\n    { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\n    { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\n  ]\n}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('created project', action.project);\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error', action.error);\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default projectReducer","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nimport authReducer from './authReducer';\nimport projectReducer from './projectReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n})\n\nexport default rootReducer\n","const configObject = {\n  apiKey: \"AIzaSyCMDWf-r6P1W0FJrg3ES118R9PJ3p5LyQM\",\n  authDomain: \"react-redux-adv-course.firebaseapp.com\",\n  databaseURL: \"https://react-redux-adv-course.firebaseio.com\",\n  projectId: \"react-redux-adv-course\",\n  storageBucket: \"react-redux-adv-course.appspot.com\",\n  messagingSenderId: \"544020372105\",\n  appId: \"1:544020372105:web:fe29bf23e0d9f547fd8458\",\n  measurementId: \"G-TRBSN581KC\"\n};\n\nexport default configObject;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nimport configObject from './configObject';\n\n// Initialize Firebase\nfirebase.initializeApp(configObject);\nfirebase.firestore();\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider, useSelector } from 'react-redux';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nimport { getFirebase, ReactReduxFirebaseProvider, isLoaded } from 'react-redux-firebase'\nimport { createFirestoreInstance } from 'redux-firestore'\nimport firebase from './config/fbConfig'\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument(getFirebase))\n  )\n);\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return null;\n  return children\n}\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider\n        firebase={firebase}\n        config={{ userProfile: 'users', useFirestoreForProfile: true }}\n        dispatch={store.dispatch}\n        createFirestoreInstance={createFirestoreInstance}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}